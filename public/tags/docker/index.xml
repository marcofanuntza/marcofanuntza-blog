<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Howto e esperienze di shell..</title>
    <link>https://marcofanuntza.it/tags/docker/</link>
    <description>Recent content in Docker on Howto e esperienze di shell..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it-it</language>
    <lastBuildDate>Wed, 04 Dec 2024 10:59:48 +0100</lastBuildDate>
    <atom:link href="https://marcofanuntza.it/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Come eseguo backup dei volumi Docker</title>
      <link>https://marcofanuntza.it/posts/come-eseguo-backup-volumi-docker/</link>
      <pubDate>Wed, 04 Dec 2024 10:59:48 +0100</pubDate>
      <guid>https://marcofanuntza.it/posts/come-eseguo-backup-volumi-docker/</guid>
      <description>&lt;p&gt;Come eseguo il backup dei volumi Docker? Niente di più semplice!&lt;/p&gt;
&lt;p&gt;Tralasciando la pappardella su quanto sia importante avere dei backup vi mostro come eseguo il backup dei volumi Docker presenti sul mio Raspberry Pi 5&lt;/p&gt;
&lt;p&gt;Eseguo applicazioni in self hosting e alcune sono dei container Docker, ho citato il Raspberry ma la stessa procedura può essere utilizzata su qualsiasi altra distribuzione Linux&lt;/p&gt;
&lt;p&gt;Partiamo dal presupposto che utilizziate Docker che esegue dei container e che questi abbiano dei volumi persistenti come nel mio caso.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Harbor come Registry</title>
      <link>https://marcofanuntza.it/posts/harbor-come-registry/</link>
      <pubDate>Wed, 31 Jan 2024 11:26:58 +0100</pubDate>
      <guid>https://marcofanuntza.it/posts/harbor-come-registry/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Harbor&lt;/strong&gt; è un registry open-source per la gestione delle immagini dei container. Progettato per funzionare con orchestration tools come Kubernetes e Docker Swarm.&lt;/p&gt;
&lt;p&gt;Ecco alcune caratteristiche principali di Harbor:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Harbor&lt;/strong&gt; offre un registry sicuro e privato per le immagini dei container, permettendo un controllo totale sulla loro archiviazione e distribuzione.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Politiche di Sicurezza:&lt;/strong&gt; Supporta politiche per garantire che solo immagini sicure e approvate vengano utilizzate nell&amp;rsquo;ambiente.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Controllo degli Accessi:&lt;/strong&gt; Dispone di un sistema robusto di controllo degli accessi, consentendo la definizione precisa di chi può accedere e distribuire immagini specifiche.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installiamo Argocd</title>
      <link>https://marcofanuntza.it/posts/installiamo-argocd/</link>
      <pubDate>Fri, 26 Jan 2024 09:02:24 +0100</pubDate>
      <guid>https://marcofanuntza.it/posts/installiamo-argocd/</guid>
      <description>&lt;p&gt;&lt;strong&gt;ARGO CD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Argo CD è uno strumento open-source progettato per implementare e gestire il CD (continous deployment) su infrastrutture Kubernetes.
Si basa sui principi GitOps, utilizza repository Git come unica fonte di verità per la configurazione dell&amp;rsquo;infrastruttura e delle applicazioni.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I principali punti chiave di ARGO CD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Continuous Deployment:&lt;/strong&gt; ARGO CD automatizza il processo di implementazione delle applicazioni su cluster Kubernetes, garantendo che lo stato attuale corrisponda a quello dichiarato nel repository Git.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Proviamo Kubernetes con Kind</title>
      <link>https://marcofanuntza.it/posts/proviamo-kubernetes-con-kind/</link>
      <pubDate>Thu, 25 Jan 2024 10:37:46 +0100</pubDate>
      <guid>https://marcofanuntza.it/posts/proviamo-kubernetes-con-kind/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Proviamo Kubernetes con Kind&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Questa guida è indicata per tutti coloro che hanno esigenza di interagire con un cluster Kubernetes per meri scopi di test, conoscenza e sviluppo utilizzando una workstation o notebook con risorse limitate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kind (Kubernetes IN Docker)&lt;/strong&gt; è uno strumento open-source progettato per semplificare la creazione e la gestione di cluster Kubernetes locali utilizzando container Docker come nodi del cluster.&lt;/p&gt;
&lt;p&gt;Ecco alcune caratteristiche chiave di kind:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installazione Semplificata:&lt;/strong&gt; kind semplifica notevolmente il processo di installazione di Kubernetes su una macchina locale, consentendo agli sviluppatori di creare rapidamente e facilmente cluster Kubernetes per scopi di sviluppo o test.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Come installare Docker e Docker Compose su Ubuntu</title>
      <link>https://marcofanuntza.it/posts/come-installare-docker-e-docker-compose-su-ubuntu/</link>
      <pubDate>Mon, 15 Jan 2024 13:34:41 +0100</pubDate>
      <guid>https://marcofanuntza.it/posts/come-installare-docker-e-docker-compose-su-ubuntu/</guid>
      <description>&lt;p&gt;Come installare Docker e Docker compose su Ubuntu&lt;/p&gt;
&lt;p&gt;Questa guida elenca passo per passo la procedura da seguire per installare docker, docker compose e containerd su distribuzione Ubuntu.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisiti:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;server o workstation con distribuzione ubuntu&lt;/li&gt;
&lt;li&gt;accesso alla rete per scaricare i pacchetti&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Procedura&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tutti i comandi verranno eseguiti da terminale, se in precedenza avevate già provato un&amp;rsquo;installazione di Docker sarebbe opportuno rimuoverla eseguendo il comando che segue:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;adesso si può procedere con l&amp;rsquo;installazione, si parte prima di tutto aggiungendo il repository ufficiale Docker&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
